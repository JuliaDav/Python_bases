'''
Задача-1: Написать класс, например, Worker, который должен содержать информацию
о работнике (ФИО, оклад, надбавка за напряженность).
Создать экземпляр класса и передать конкретные данные (примеры ФИО, должности,
оклад и надбавки). Оклад и надбавку передать в виде строки.
На основе строки создать атрибут income, который реализовать в виде словаря
и инкапуслировать. Словарь income должен содержать информацию об окладе и надбавке.
Применить к экземпляру
класса метод __dict__ и проверить какой будет результат применения этого метода.
А комментариях к заданию написать тип результата на русском языке.

Задача-2: Продолжить работу над задачей 1. Создать на основе класса Worker класс
Position (реализовать наследование). Добавить классу уникальный атрибут -
% премии к зарплате (от суммы оклада).
Создать метод расчета зарплаты с учетом только премии.
Реализовать обращение к этому атриубуту, как к свойству.
Проверить работу всей структуры на реальных данных, вывести результаты.

Задача-3: Продолжить работу над задачей 2.  Реализовать полиморфизм
использования знака + в методах 1) вывода полного имени работника и возраста
2) вычисления общего дохода работника с учетом надбавки .
Проверить работу всей структуры на реальных данных, вывести результаты.
'''

class Worker:
    def __init__(self, name, surname, income):
        self.name = name
        self.surname = surname
        self.income = {'salary': int(income.split('+')[0]),
                       'bonus': int(income.split('+')[1])}
#выводим полное имя
    def fullname(self):
        return '{} {}'.format(self.name, self.surname)


class Position(Worker):
    def __init__(self, name, surname, income, bonus_percent):
        Worker.__init__(self, name, surname, income)
        self.bonus_percent = bonus_percent

# рассчитываем оклад с премией
    def total_income(self):
        return self.income['salary'] * ((int(self.bonus_percent) / 100) +1)

worker_1 = Worker('Vasya', 'Petrov', '30000+20000')
worker_2 = Worker('Petya', 'Ivanov', '40000+20000')

position_1 = Position('Sergey', 'Borisov', '45000+20000', '10')
position_2 = Position('Boris', 'Sergeev', '35000+20000', '15')

print(worker_1.fullname())
print(position_1.fullname())
print(position_1.total_income())


